name: .NET

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  buildAndTest:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - name: Build
        run: dotnet build Adder.UnitTests/Adder.UnitTests.csproj

      # Each `run` keyword represents a new process and shell so I would execute
      # all commands related to test in the same step and `run` attribute as a multi-line command
      - name: Test
        run: |
          dotnet test Adder.UnitTests/Adder.UnitTests.csproj --no-build --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura,lcov
          mkdir CoverageDataFiles
          cp Adder.UnitTests/TestResults/**/*.* CoverageDataFiles

        # run: dotnet test Adder.UnitTests/Adder.UnitTests.csproj --no-build --verbosity normal /p:CollectCoverage=true /#p:CoverletOutputFormat=cobertura /p:CoverletOutput=TestResults/Coverage/

      - name: Generate Coverage Report
        uses: danielpalme/ReportGenerator-GitHub-Action@5.0.0
        with:
          reports: "./CoverageDataFiles/coverage.cobertura.xml"
          targetdir: "coveragereport"
          reporttypes: "HtmlInline;Cobertura;MarkdownSummary;Badges"

      - name: Upload ReportGenerator report as artifact
        uses: actions/upload-artifact@v2
        with:
          name: ReportGenerator coverage report
          path: coveragereport/

      - name: copy coverage badge to .github
        run: |
          mkdir -p .github/badges
          cp coveragereport/badge_linecoverage.svg .github/badges/linecoverage_badge.svg
          cp coveragereport/badge_branchcoverage.svg .github/badges/branchcoverage_badge.svg

      - name: Store coverage badge in repo
        uses: EndBug/add-and-commit@v7
        with:
          add: ".github/badges/*coverage_badge.svg --force"

      # here we are ok to run only on pull_request as the artifacts genrated by this step will
      # be used in the sticky comment that is meant only to be place din pull request.
      - name: Modify coverage summary to include badge and link to artifact (pull request version)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo -n '![Line Coverage Badge](https://raw.githubusercontent.com/${{ github.repository }}/${{ github.head_ref }}/.github/badges/linecoverage_badge.svg)  ' >> coveragereport/ModifiedSummary.md
          echo '![Branch Coverage Badge](https://raw.githubusercontent.com/${{ github.repository }}/${{ github.head_ref }}/.github/badges/branchcoverage_badge.svg)' >> coveragereport/ModifiedSummary.md
          echo -e '\n' >> coveragereport/ModifiedSummary.md
          cat coveragereport/Summary.md >> coveragereport/ModifiedSummary.md
          echo '# Coverage Report' >> coveragereport/ModifiedSummary.md
          echo -e '\n\n[Workflow run summary with link to artifacts](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) (contains HTML coverage report)' >> coveragereport/ModifiedSummary.md

      # This also appears in workflow that doesn't write out badges

      # in PR but have included it again as file name is different
      # (ModifiedSummary.md instead of Summary.md)
      - name: Publish coverage summary
        if: ${{ github.event_name == 'pull_request' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: coveragereport/ModifiedSummary.md
